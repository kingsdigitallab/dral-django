# Generated by Django 2.2.3 on 2019-09-20 16:03

from django.db import migrations
from collections import OrderedDict

'''
List of visualisations, in display order.
Format: [SLUG, METADATA]
SLUG: is a web slug that MUST match the method name
    dral_wagtail.views.Visualisation.visualisation_SLUG
METADATA: if a dictionary with the following keys:
    visibility:
        'liv': visible on all sites
        'dev': visible on dev / local site
        None: never visible
USE Visualisations / Visualisation classes to manipulate this dictionary
'''
DRAL_VIZS = OrderedDict([
    ['relative_omission', {
        'type': 'featured',
        'visibility': 'liv',
        'name': 'Relative omissions',
    }],
    ['absolute_omission', {
        'type': 'exploratory',
        'visibility': 'dev',
        'name': 'Absolute omissions',
    }],
    ['relative_omission_calendar', {
        'type': 'exploratory',
        'visibility': 'liv',
        'name': 'Relative omissions (calendar)',
    }],
    ['variants_progression', {
        'type': 'exploratory',
        'visibility': 'liv',
        'name': 'Variant progression',
    }],
    ['tabular', {
        'type': 'exploratory',
        'visibility': 'liv',
        'name': 'Tabular',
    }],
    ['json', {
        'type': 'featured',
        'visibility': 'liv',
        'name': 'JSON',
    }],
])


def import_visualisations(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Visualisation = apps.get_model('dral_text', 'Visualisation')

    display_order = 0
    for key, data in DRAL_VIZS.items():
        display_order += 10
        data['display_order'] = display_order
        Visualisation.objects.get_or_create(
            key=key,
            defaults=data
        )


class Migration(migrations.Migration):

    dependencies = [
        ('dral_text', '0030_visualisation'),
    ]

    operations = [
        migrations.RunPython(import_visualisations),
    ]
